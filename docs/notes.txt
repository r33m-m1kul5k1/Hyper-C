the bug:

when enabling paging back with pae in protected mode the HV crashes.

reasons:
1. I shouldn't load the cr3 register when jumping to protected mode from long mode.
2. Most likely not a format issue.

solutions:
1. to not use pae & paging in protected mode.


the bug:

when returning from the protected_to_real function the ret instruction jumps to 0xcec
it happens without the cpu host

reasons:
1. sti results an interrupt call
2. takes the wrong address from the stack
3. disabling paging the wrong way - not it
4. maybe protected mode must use paging?

the stack address was higher then accessible in real mode :)


the bug:

when a bios interrupt called ip frezzes on the same line.

situation:
I'm in real mode after jumping protected -> long -> protected (without paing and pae) -> real 

1. my host computer is not able to interact with the bios to qemu
2. the gdt is not loaded :()? yes but gdb is not able to show it.
3. am I overriding some important code? most likely not.
4. kvm on archlinux doesn't support interrupts


the bug:
I create multiple definitions of an array of strings

the reason:
I include vmm.h twice, once for the vmm.c and once for initialize_host.c

inside the vmm.h we need to include the error codes